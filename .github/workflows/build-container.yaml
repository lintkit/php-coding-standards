name: Create and publish a container

env:
  TITLE: "LintKit: PHP Coding Standards"
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    tags:
      - '*'

jobs:
  create-docker-images:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Composer Dependencies
        uses: ramsey/composer-install@v3
        with:
          composer-options: "--no-dev --no-interaction --no-scripts --no-progress --optimize-autoloader --ansi  --ignore-platform-reqs"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=="${{ env.TITLE }}"
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{ is_default_branch }}
            type=sha,enable=false
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ${{ github.workspace }}
          file: ${{ github.workspace }}/vendor/lintkit/base-kit/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ADDITIONAL_PACKAGES=${{ env.ADDITIONAL_PACKAGES || '' }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
